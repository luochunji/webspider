package com.rwy.spider.bean.quartz;

// Generated 2014-10-28 8:26:25 by Hibernate Tools 4.0.0

import com.rwy.spider.bean.task.TaskScheduler;

import javax.persistence.*;

/**
 * QrtzTriggers generated by hbm2java
 */
@Entity
@Table(name = "qrtz_triggers", catalog = "spider")
public class QrtzTriggers implements java.io.Serializable {

	private QrtzTriggersId id;
	private QrtzJobDetails qrtzJobDetails;
	private String description;
	private Long nextFireTime;
	private Long prevFireTime;
	private Integer priority;
	private String triggerState;
	private String triggerType;
	private long startTime;
	private Long endTime;
	private String calendarName;
	private Short misfireInstr;
	private byte[] jobData;
	private QrtzSimpleTriggers qrtzSimpleTriggers;
	private QrtzCronTriggers qrtzCronTriggers;
	private QrtzBlobTriggers qrtzBlobTriggers;
	private QrtzSimpropTriggers qrtzSimpropTriggers;

	public QrtzTriggers() {
	}

	public QrtzTriggers(QrtzTriggersId id, QrtzJobDetails qrtzJobDetails,
			String triggerState, String triggerType, long startTime) {
		this.id = id;
		this.qrtzJobDetails = qrtzJobDetails;
		this.triggerState = triggerState;
		this.triggerType = triggerType;
		this.startTime = startTime;
	}

	public QrtzTriggers(QrtzTriggersId id, QrtzJobDetails qrtzJobDetails,
			String description, Long nextFireTime, Long prevFireTime,
			Integer priority, String triggerState, String triggerType,
			long startTime, Long endTime, String calendarName,
			Short misfireInstr, byte[] jobData,
			QrtzSimpleTriggers qrtzSimpleTriggers,
			QrtzCronTriggers qrtzCronTriggers,
			QrtzBlobTriggers qrtzBlobTriggers,
			QrtzSimpropTriggers qrtzSimpropTriggers) {
		this.id = id;
		this.qrtzJobDetails = qrtzJobDetails;
		this.description = description;
		this.nextFireTime = nextFireTime;
		this.prevFireTime = prevFireTime;
		this.priority = priority;
		this.triggerState = triggerState;
		this.triggerType = triggerType;
		this.startTime = startTime;
		this.endTime = endTime;
		this.calendarName = calendarName;
		this.misfireInstr = misfireInstr;
		this.jobData = jobData;
		this.qrtzSimpleTriggers = qrtzSimpleTriggers;
		this.qrtzCronTriggers = qrtzCronTriggers;
		this.qrtzBlobTriggers = qrtzBlobTriggers;
		this.qrtzSimpropTriggers = qrtzSimpropTriggers;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "schedName", column = @Column(name = "SCHED_NAME", nullable = false, length = 120)),
			@AttributeOverride(name = "triggerName", column = @Column(name = "TRIGGER_NAME", nullable = false, length = 200)),
			@AttributeOverride(name = "triggerGroup", column = @Column(name = "TRIGGER_GROUP", nullable = false, length = 200)) })
	public QrtzTriggersId getId() {
		return this.id;
	}

	public void setId(QrtzTriggersId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SCHED_NAME", referencedColumnName = "SCHED_NAME", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "JOB_NAME", referencedColumnName = "JOB_NAME", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "JOB_GROUP", referencedColumnName = "JOB_GROUP", nullable = false, insertable = false, updatable = false) })
	public QrtzJobDetails getQrtzJobDetails() {
		return this.qrtzJobDetails;
	}

	public void setQrtzJobDetails(QrtzJobDetails qrtzJobDetails) {
		this.qrtzJobDetails = qrtzJobDetails;
	}

	@Column(name = "DESCRIPTION", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "NEXT_FIRE_TIME")
	public Long getNextFireTime() {
		return this.nextFireTime;
	}

	public void setNextFireTime(Long nextFireTime) {
		this.nextFireTime = nextFireTime;
	}

	@Column(name = "PREV_FIRE_TIME")
	public Long getPrevFireTime() {
		return this.prevFireTime;
	}

	public void setPrevFireTime(Long prevFireTime) {
		this.prevFireTime = prevFireTime;
	}

	@Column(name = "PRIORITY")
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "TRIGGER_STATE", nullable = false, length = 16)
	public String getTriggerState() {
		return this.triggerState;
	}

	public void setTriggerState(String triggerState) {
		this.triggerState = triggerState;
	}

	@Column(name = "TRIGGER_TYPE", nullable = false, length = 8)
	public String getTriggerType() {
		return this.triggerType;
	}

	public void setTriggerType(String triggerType) {
		this.triggerType = triggerType;
	}

	@Column(name = "START_TIME", nullable = false)
	public long getStartTime() {
		return this.startTime;
	}

	public void setStartTime(long startTime) {
		this.startTime = startTime;
	}

	@Column(name = "END_TIME")
	public Long getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Long endTime) {
		this.endTime = endTime;
	}

	@Column(name = "CALENDAR_NAME", length = 200)
	public String getCalendarName() {
		return this.calendarName;
	}

	public void setCalendarName(String calendarName) {
		this.calendarName = calendarName;
	}

	@Column(name = "MISFIRE_INSTR")
	public Short getMisfireInstr() {
		return this.misfireInstr;
	}

	public void setMisfireInstr(Short misfireInstr) {
		this.misfireInstr = misfireInstr;
	}

    @Lob
	@Column(name = "JOB_DATA")
	public byte[] getJobData() {
		return this.jobData;
	}

	public void setJobData(byte[] jobData) {
		this.jobData = jobData;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzSimpleTriggers getQrtzSimpleTriggers() {
		return this.qrtzSimpleTriggers;
	}

	public void setQrtzSimpleTriggers(QrtzSimpleTriggers qrtzSimpleTriggers) {
		this.qrtzSimpleTriggers = qrtzSimpleTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzCronTriggers getQrtzCronTriggers() {
		return this.qrtzCronTriggers;
	}

	public void setQrtzCronTriggers(QrtzCronTriggers qrtzCronTriggers) {
		this.qrtzCronTriggers = qrtzCronTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzBlobTriggers getQrtzBlobTriggers() {
		return this.qrtzBlobTriggers;
	}

	public void setQrtzBlobTriggers(QrtzBlobTriggers qrtzBlobTriggers) {
		this.qrtzBlobTriggers = qrtzBlobTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "qrtzTriggers")
	public QrtzSimpropTriggers getQrtzSimpropTriggers() {
		return this.qrtzSimpropTriggers;
	}

	public void setQrtzSimpropTriggers(QrtzSimpropTriggers qrtzSimpropTriggers) {
		this.qrtzSimpropTriggers = qrtzSimpropTriggers;
	}
}
